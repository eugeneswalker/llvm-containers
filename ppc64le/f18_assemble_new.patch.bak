diff --git a/flang/tools/f18/f18.cpp b/flang/tools/f18/f18.cpp
index 4546353fe010..076471f843ca 100644
--- a/flang/tools/f18/f18.cpp
+++ b/flang/tools/f18/f18.cpp
@@ -109,6 +109,8 @@ struct DriverOptions {
   bool getDefinition{false};
   GetDefinitionArgs getDefinitionArgs{0, 0, 0};
   bool getSymbolsSources{false};
+  bool dashc{true};
+  bool assemble{true};
 };
 
 void Exec(std::vector<llvm::StringRef> &argv, bool verbose = false) {
@@ -135,10 +137,15 @@ void RunOtherCompiler(DriverOptions &driver, char *source, char *relo) {
   for (size_t j{0}; j < driver.F18_FCArgs.size(); ++j) {
     argv.push_back(driver.F18_FCArgs[j]);
   }
-  char dashC[3] = "-c", dashO[3] = "-o";
-  argv.push_back(dashC);
+  char dashC[3] = "-c", dashO[3] = "-o", dashS[3] = "-S";
+  if (driver.dashc) { 
+    argv.push_back(dashC);
+  }
   argv.push_back(dashO);
   argv.push_back(relo);
+  if (!driver.assemble) {
+    argv.push_back(dashS); 
+  }
   argv.push_back(source);
   Exec(argv, driver.verbose);
 }
@@ -157,7 +164,11 @@ std::string RelocatableName(const DriverOptions &driver, std::string path) {
   if (dot != std::string::npos) {
     relo = base.substr(0, dot);
   }
-  relo += ".o";
+  if (driver.assemble) { 
+    relo += ".o";
+  } else { 
+    relo += ".s";
+  }
   return relo;
 }
 
@@ -393,6 +404,11 @@ int printVersion() {
   return exitStatus;
 }
 
+int dumpVersion() {
+  llvm::errs() << FLANG_VERSION_MAJOR_STRING << "\n";
+  return exitStatus;
+}
+
 int main(int argc, char *const argv[]) {
 
   atexit(CleanUpAtExit);
@@ -661,7 +677,7 @@ int main(int argc, char *const argv[]) {
           << "  -fdebug-no-semantics  disable semantic checks\n"
           << "  -fget-definition\n"
           << "  -fget-symbols-sources\n"
-          << "  -v -c -o -I -D -U    have their usual meanings\n"
+          << "  -v -c -o -I -D -U -S have their usual meanings\n"
           << "  -help                print this again\n"
           << "Unrecognised options are passed through to the external "
              "compiler\n"
@@ -669,6 +685,12 @@ int main(int argc, char *const argv[]) {
       return exitStatus;
     } else if (arg == "-V" || arg == "--version") {
       return printVersion();
+    } else if (arg == "-dumpversion") {
+      return dumpVersion();
+    } else if (arg == "-S") { 
+      driver.dashc = false;
+      driver.assemble = false; 
+      driver.compileOnly = true;
     } else if (arg == "-fdebug-stack-trace") {
       llvm::sys::PrintStackTraceOnErrorSignal(llvm::StringRef{}, true);
     } else {
